
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users: Publicly readable, but only the user can write to their own document.
    match /users/{userId} {
      allow read: if true;
      allow write: if request.auth.uid == userId;

      // Following/Followers: Only the user can manage their own follow list.
      match /following/{targetUserId} {
        allow read: if true;
        allow write: if request.auth.uid == userId;
      }
      match /followers/{followerUserId} {
        allow read: if true;
        allow write: if request.auth.uid == followerUserId;
      }
    }

    // Posts: Readable by everyone, writable only by authenticated users.
    // Users can only edit/delete their own posts.
    match /posts/{postId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update, delete: if request.auth.uid == resource.data.userId;

      // Comments: Readable by everyone, writable only by authenticated users.
      match /comments/{commentId} {
        allow read: if true;
        allow create: if request.auth != null;
        allow update, delete: if request.auth.uid == resource.data.userId;
      }
    }

    // Showcases: Readable by everyone, writable only by authenticated users.
    // Users can only edit/delete their own showcases.
    match /showcases/{showcaseId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update: if request.auth != null && (request.resource.data.upvotes == resource.data.upvotes + 1 || request.auth.uid == resource.data.userId);
      allow delete: if request.auth.uid == resource.data.userId;
    }
  }
}
